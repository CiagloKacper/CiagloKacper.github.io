[{"/Users/kacper/projekty/PORTFOLIO/web_app/src/index.js":"1","/Users/kacper/projekty/PORTFOLIO/web_app/src/App.js":"2","/Users/kacper/projekty/PORTFOLIO/web_app/src/reportWebVitals.js":"3","/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/RouteWrapper.js":"4","/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/home.js":"5","/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/projects.js":"6","/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/about.js":"7","/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/projects/TicTac.js":"8","/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/projects/calc.js":"9","/Users/kacper/projekty/backup/portfolio-web/src/index.js":"10","/Users/kacper/projekty/backup/portfolio-web/src/App.js":"11","/Users/kacper/projekty/backup/portfolio-web/src/reportWebVitals.js":"12","/Users/kacper/projekty/backup/portfolio-web/src/assets/RouteWrapper.js":"13","/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/home.js":"14","/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/about.js":"15","/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects.js":"16","/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects/TicTac.js":"17","/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects/calc.js":"18","/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects/typer.js":"19","/Users/kacper/projekty/backup/portfolio-web/src/assets/services/api.js":"20","/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects/components/typerGame.js":"21"},{"size":535,"mtime":1674591718686,"results":"22","hashOfConfig":"23"},{"size":7423,"mtime":1675177144520,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1674591718687,"results":"25","hashOfConfig":"23"},{"size":796,"mtime":1675179267933,"results":"26","hashOfConfig":"23"},{"size":804,"mtime":1675177777373,"results":"27","hashOfConfig":"23"},{"size":6594,"mtime":1675186984135,"results":"28","hashOfConfig":"23"},{"size":6467,"mtime":1675195564818,"results":"29","hashOfConfig":"23"},{"size":7351,"mtime":1675103078984,"results":"30","hashOfConfig":"23"},{"size":5629,"mtime":1675179128538,"results":"31","hashOfConfig":"23"},{"size":619,"mtime":1675419565328,"results":"32","hashOfConfig":"33"},{"size":6755,"mtime":1677585335306,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1675242123304,"results":"35","hashOfConfig":"33"},{"size":820,"mtime":1681235117885,"results":"36","hashOfConfig":"33"},{"size":843,"mtime":1676555534772,"results":"37","hashOfConfig":"33"},{"size":11905,"mtime":1677585456759,"results":"38","hashOfConfig":"33"},{"size":4904,"mtime":1677585148889,"results":"39","hashOfConfig":"33"},{"size":8341,"mtime":1680001357260,"results":"40","hashOfConfig":"33"},{"size":5650,"mtime":1677585084351,"results":"41","hashOfConfig":"33"},{"size":1543,"mtime":1677574975975,"results":"42","hashOfConfig":"33"},{"size":267,"mtime":1676825326441,"results":"43","hashOfConfig":"33"},{"size":4572,"mtime":1679481749550,"results":"44","hashOfConfig":"33"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1vcl4fl",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"10ama18",{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},"/Users/kacper/projekty/PORTFOLIO/web_app/src/index.js",[],[],[],"/Users/kacper/projekty/PORTFOLIO/web_app/src/App.js",["117"],[],"import \"./App.css\";\nimport \"./style/main.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown, Container, Offcanvas, Button } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport RouteWrapper from \"./assets/RouteWrapper\";\n\n\nfunction App() {\n\n  //mobile offcanvas\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  //currency update and local storage\n  const [curr, changeCurr] = useState(\"PLN\");\n  const currUpdate = (val) => {\n    localStorage.setItem(\"currency\", val);\n    changeCurr(localStorage.getItem(\"currency\"));\n  };\n\n  //language update and local storage\n  const [Lang, changeLang] = useState(\"pl\");\n  const langUpdate = (val) => {\n    localStorage.setItem(\"language\", val);\n    changeLang(localStorage.getItem(\"language\"));\n    window.location.reload(false);\n  };\n\n  //load storage data\n  useEffect(() => {\n    if (localStorage.getItem(\"language\") != null && localStorage.getItem(\"currency\") != null) {\n      changeLang(localStorage.getItem(\"language\"));\n      changeCurr(localStorage.getItem(\"currency\"));\n    } else {\n      changeLang(\"pl\");\n      localStorage.setItem(\"language\", \"pl\");\n      changeCurr(\"PLN\");\n      localStorage.setItem(\"currency\", \"PLN\");\n    }\n  });\n\n\n  return (\n    <Router>\n      <Navbar\n        style={{\n          backgroundColor: \"var(--main)\",\n          boxShadow: \"0px 3px 4px rgba(0, 0, 0, 0.25)\",\n        }}\n        className=\"Navbar_main\"\n        variant=\"dark\"\n      >\n        <div className=\"nav-overlay\"></div>\n        <Container>\n          <Navbar.Brand href=\"/\" style={{zIndex:\"100\"}}>\n            Brand\n          </Navbar.Brand>\n          <Nav>\n            <Nav className=\"me-auto d-none d-md-flex\">\n              <Nav.Link href=\"/\" className=\"mainLink\">Home page</Nav.Link>\n              <div className=\"vr my-1 mx-4\" />\n              <Nav.Link href='/about' className=\"mainLink\">About me</Nav.Link>\n              <div className=\"vr my-1 mx-4\" />\n              <Nav.Link href='/projects' className=\"mainLink\">My projects</Nav.Link>\n            </Nav>\n            <Button\n              className=\"d-md-none upperbtn\"\n              style={{ width: \"auto\" }}\n              onClick={handleShow}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"32\"\n                height=\"32\"\n                fill=\"white\"\n                className=\"bi bi-list\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n                />\n              </svg>\n\n            </Button>\n          </Nav>\n        </Container>\n      </Navbar>\n\n        {/* MOBILE */}\n        <Offcanvas\n          show={show}\n          className=\"d-block d-md-none\"\n          onHide={handleClose}\n        >\n          <Offcanvas.Header closeButton>\n            <Offcanvas.Title>MareckiTour</Offcanvas.Title>\n          </Offcanvas.Header>\n          <Offcanvas.Body style={{ maxWidth: \"400px\" }}>\n            <hr className=\"my-2\" />\n            <Nav.Link\n              className=\"Offcanv d-flex\"\n              onClick={handleClose}\n              as={Link}\n              to=\"/\"\n            >\n              <p className=\"my-auto ms-3 fw-bold\" style={{ fontSize: \"20px\" }}>\n                Home\n              </p>\n            </Nav.Link>\n            <hr className=\"my-2\" />\n            <Nav.Link\n              className=\"Offcanv d-flex\"\n              onClick={handleClose}\n              as={Link}\n              to=\"/about\"\n            >\n              <p className=\"my-auto ms-3 fw-bold\" style={{ fontSize: \"20px\" }}>\n                About\n              </p>\n            </Nav.Link>\n            <hr className=\"my-2\" />\n            <Nav.Link\n              className=\"Offcanv d-flex logout-btn\"\n              onClick={handleClose}\n              as={Link}\n              to=\"/projects\"\n            >\n              <p className=\"my-auto ms-3 fw-bold\" style={{ fontSize: \"20px\" }}>\n                My projects\n              </p>\n            </Nav.Link>\n            <hr className=\"my-2\" />\n            <Container className=\"d-flex\">\n              <p\n                className=\"my-auto fw-semibold me-2\"\n                style={{ fontSize: \"16px\" }}\n              >\n                ustawienia\n              </p>\n              <NavDropdown\n                title={\n                  <span className=\"Marecki\">\n                    <p className=\"d-inline p-1 fw-bolder\">{Lang}</p>\n                  </span>\n                }\n                className=\"my-auto nav-dropdown\"\n                onSelect={langUpdate}\n              >\n                <NavDropdown.Item eventKey=\"PL\"><span className=\"nav-dropdown-text\">PL</span></NavDropdown.Item>\n                <NavDropdown.Item eventKey=\"EN\"><span className=\"nav-dropdown-text\">EN</span></NavDropdown.Item>\n                <NavDropdown.Item eventKey=\"DE\"><span className=\"nav-dropdown-text\">DE</span></NavDropdown.Item>\n              </NavDropdown>\n              <div className=\"vr m-1\" />\n              <NavDropdown\n                title={\n                  <span className=\"Marecki\">\n                    <p className=\"d-inline p-1 fw-bolder\">{curr}</p>\n                  </span>\n                }\n                className=\"my-auto nav-dropdown\"\n                onSelect={currUpdate}\n              >\n                <NavDropdown.Item eventKey=\"PLN\">\n                 <span className=\"nav-dropdown-text\">PLN</span></NavDropdown.Item>\n                <NavDropdown.Item eventKey=\"EUR\">\n                  <span className=\"nav-dropdown-text\">EUR</span></NavDropdown.Item>\n              </NavDropdown>\n            </Container>\n            <hr className=\"my-2\" />\n            <Container className=\"w-100\">\n              <Nav.Link className=\"Offcanv\">ustawienia</Nav.Link>\n              <Nav.Link className=\"Offcanv\">ustawienia</Nav.Link>\n              <Nav.Link className=\"Offcanv\">ustawienia</Nav.Link>\n            </Container>\n          </Offcanvas.Body>\n        </Offcanvas>\n      {/* routes */}\n\n      \n        <RouteWrapper/>\n        {/* <Route path=\"*\" element={<NotFound />} />\n          <Route path=\"/\" element={<Find />} />\n          <Route path=\"/visual\" element={<MadeOrder/>} />\n          <Route path=\"/routes\" element={<TripsWrapper/>} />\n          <Route path=\"/order/:order_id\" element={<OrderWrapper/>} />\n          <Route path=\"/order/complete/:order_id/:hash\" element={<ManualOrder/>} />\n          <Route path=\"/register\" element={<IsLogin><Register /></IsLogin>} />\n          <Route path=\"/password/reset\" element={<Reset />} />\n          <Route path=\"/email/verify/:token\" element={<Validation />} />\n          <Route path=\"/password/new/:token\" element={<Reset2 />} />\n          <Route path=\"/login\" element={<IsLogin><Login /></IsLogin>} />\n          <Route\n            path=\"/account/trips\"\n            element={<RequireLogin><PanelTrips /></RequireLogin>}\n          />\n          <Route\n            path=\"/account/settings\"\n            element={<RequireLogin><PanelSettings /></RequireLogin>}\n          /> */}\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/kacper/projekty/PORTFOLIO/web_app/src/reportWebVitals.js",[],[],"/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/RouteWrapper.js",[],[],"/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/home.js",[],[],"/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/projects.js",[],[],"/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/about.js",["118","119","120"],[],"import \"../../style/main.css\";\nimport React, { useEffect } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Computer from '../images/computer.gif';\nimport Asg from '../images/vector.gif'\nimport Dino from '../images/dino.gif'\nimport Val from '../images/val.gif';\nimport Aos from \"aos\";\nimport 'aos/dist/aos.css'\nimport { IconBrandGithub, IconBrandLinkedin, IconBrandFacebook, IconMail } from \"@tabler/icons-react\";\n\nfunction AboutPage() {\n\n    useEffect(() => {\n        Aos.init({ duration: 700 });\n    }, []);\n\n    return (\n        <Container className=\"aboutBg p-5\" fluid>\n            <h1 className=\"mt-4\" style={{ textAlign: 'center' }}>About me</h1>\n            <Container className=\"d-flex  about_content\">\n                <div className=\"vr d-none d-md-block verticalRow my-5\" />\n                <div>\n\n\n                    <Row className=\"my-4\">\n                        <Col sm={12} md={6}>\n                            <img data-aos=\"fade-left\" className=\"about_photo\" src={Computer} alt='' />\n                        </Col>\n                        <Col sm={12} md={6}>\n                            <div data-aos=\"fade-right\" className=\"aboutEl p-3\">\n                                <p>My name is Kacper</p>\n                                <p> I enjoy programing and many more activities like volleyball, basketball, video games etc. <br />\n                                    I specialize in HTML CSS and JavaScript, i use React framework to develop front-end solutions. I've also\n                                    used Angular during my first courses in programing. As a hobby I learn Kotlin for mobile apps\n                                    and php in laravel for back-end Api application.\n                                </p>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mb-4\">\n                        <Col sm={12} md={6}>\n                            <div data-aos=\"fade-left\" className=\"aboutEl p-3\">\n                                <p>\n                                    My first contact with programing was 6 years ago when i tried to write my own game in C#, it wasn't\n                                    easy, must admit it was too hard for me at this point of knowledge. I've created few projects but\n                                    only one survived, later when I went to high school i learned python. It was nice experience but then\n                                    we started learning HTML and CSS for exam and I loved it. Thats how i started web dev.\n                                </p>\n                            </div>\n                        </Col>\n                        <Col sm={12} md={6}>\n                            <img data-aos=\"fade-right\" className=\"about_photo\" src={Dino} style={{ maxHeight: '200px' }} alt='' />\n                        </Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col sm={12} md={6}>\n                            <img data-aos=\"fade-left\" className=\"about_photo\" src={Computer} style={{ maxHeight: '200px' }} alt='' />\n                        </Col>\n                        <Col sm={12} md={6}>\n                            <div data-aos=\"fade-right\" className=\"aboutEl p-3\">\n                                <p> I love an active lifestyle, attending the gym, playing volleyball with friends and going to ASG games. I treat the gym like a second home, thanks to the gym I have goals in life and the desire to achieve them. I play volleyball as a hobby, because my height doesn't allow me to play a more advanced game ;(\n                                </p>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col sm={12} md={6}>\n                            <div data-aos=\"fade-left\" className=\"aboutEl p-3\">\n                                <p> ASG is my passion, from a young age I used to play with toy guns pretending to be a soldier, as soon as I discovered that as an adult I could continue to play with that type of toys I immediately knew I would love it.\n                                    I believe that my hobbies allow me to grow both physically and mentally through contact with people.\n                                </p>\n                            </div>\n                        </Col>\n                        <Col sm={12} md={6}>\n                            <img data-aos=\"fade-right\" className=\"about_photo\" src={Asg} style={{ maxHeight: '200px' }} alt='' />\n                        </Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col sm={12} md={6}>\n                            <img data-aos=\"fade-right\" className=\"about_photo\" src={Val} style={{ maxHeight: '200px' }} alt='' />\n                        </Col>\n                        <Col sm={12} md={6}>\n                            <div data-aos=\"fade-left\" className=\"aboutEl p-3\">\n                                <p> \n                                I also play computer games, my favorites being Rocket League, Valorant, Green Hell. I would also add a lot of storytelling titles, but there is no point in listing too much. I find that these games develop my imagination, increase my perceptiveness, but what's key - they allow me to de-stress after hard days, because in my opinion that's the purpose of games. \n                                </p>\n                            </div>\n                        </Col>\n                    </Row>\n\n\n                </div> \n\n\n            </Container>\n                                    \n                <h2>Wanna chat ?</h2>\n                <p className=\"pe\">Don't be afraid to contact me!</p>\n            <Container className=\"d-flex my-3 w-50\">\n                    <a className=\"link mx-auto\" href=\"https://github.com/CiagloKacper\" target='_blank'><IconBrandGithub size={50}/></a>\n                    <a className=\"link mx-auto\" href=\"https://www.linkedin.com/in/kacper-ci%C4%85g%C5%82o-92a0b6238/\" target='_blank'><IconBrandLinkedin size={50}/></a>\n                    <a className=\"link mx-auto\" href=\"https://www.facebook.com/kacperciag/\" target='_blank'><IconBrandFacebook size={50}/></a>\n            </Container>\n                <p className=\"pe\"><IconMail size={50}/> kacperciag@op.pl</p>\n        </Container>\n    );\n}\n\nexport default AboutPage;","/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/projects/TicTac.js",[],[],"/Users/kacper/projekty/PORTFOLIO/web_app/src/assets/pages/projects/calc.js",["121","122","123","124","125","126","127","128"],[],"import React, { useState } from 'react';\nimport './styling/calc_theme.css';\n\n\nfunction Calculator() {\n\n    const [Calc, setCalc] = useState('');\n    const [Result, SetResult] = useState('');\n    const ops = ['+', '-', '*', '/', '.']\n\n    const updateCalc = value =>{\n        if(\n            ops.includes(value) && Calc === '' ||\n            ops.includes(value) && ops.includes(Calc.slice(-1))\n        )\n            return\n\n        setCalc(Calc + value)\n        if(!ops.includes(value))\n            SetResult(eval(Calc + value).toString())\n    }\n\n    const delet = () => {\n        if(Calc === ''){\n            return\n        }\n        const del = Calc.slice(0,-1)\n        \n        setCalc(del)\n        if(ops.includes(del.slice(-1)))\n            SetResult(eval(del.slice(0,-1)))\n        else if(del === '')\n            SetResult('')\n        else\n            SetResult(eval(del).toString())\n    }\n\n    const equal = () => {\n        setCalc(eval(Calc).toString())\n    }\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"calculator w-50 mx-auto my-5 border rounded fw-bold\">\n                <div className=\"res text-end\">\n                    {Result? <span>({Result})</span> : ''} &nbsp;\n                    {Calc || \"0\"}\n                </div>\n                <div className=\"row ops mx-auto w-100\">\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('+')}>+</button>\n                    </div>\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('-')}>-</button>\n                    </div>\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('*')}>*</button>\n                    </div>\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('/')}>/</button>\n                    </div>\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={() => delet()}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-backspace-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"M15.683 3a2 2 0 0 0-2-2h-7.08a2 2 0 0 0-1.519.698L.241 7.35a1 1 0 0 0 0 1.302l4.843 5.65A2 2 0 0 0 6.603 15h7.08a2 2 0 0 0 2-2V3zM5.829 5.854a.5.5 0 1 1 .707-.708l2.147 2.147 2.146-2.147a.5.5 0 1 1 .707.708L9.39 8l2.146 2.146a.5.5 0 0 1-.707.708L8.683 8.707l-2.147 2.147a.5.5 0 0 1-.707-.708L7.976 8 5.829 5.854z\" />\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"nums\">\n                    <div className=\"row mx-auto w-100\">\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('7')}>7</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('8')}>8</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('9')}>9</button>\n                        </div>\n                    </div>\n                    <div className=\"row mx-auto w-100\">\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('4')}>4</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('5')}>5</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('6')}>6</button>\n                        </div>\n                    </div>\n                    <div className=\"row mx-auto w-100\">\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('1')}>1</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('2')}>2</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('3')}>3</button>\n                        </div>\n                    </div>\n                    <div className=\"row mx-auto w-100\">\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('.')}>.</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('7')}>0</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\" onClick={()=>equal()}>=</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Calculator;","/Users/kacper/projekty/backup/portfolio-web/src/index.js",[],[],[],"/Users/kacper/projekty/backup/portfolio-web/src/App.js",["129"],[],"import \"./App.css\";\nimport \"./style/main.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Navbar, Nav, Container, Offcanvas, Button } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport RouteWrapper from \"./assets/RouteWrapper\";\n\n\nfunction App() {\n\n  const location = useLocation();\n\n  const routes = [\n    '/', '/about', '/projects', '/projects/calculator', '/projects/tictac'\n  ];\n  const [active, setActive] = useState(routes.indexOf(location.pathname));\n\n  //mobile offcanvas\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  //language update and local storage\n  // const [Lang, changeLang] = useState(\"pl\");\n  // const langUpdate = (val) => {\n  //   localStorage.setItem(\"language\", val);\n  //   changeLang(localStorage.getItem(\"language\"));\n  //   window.location.reload(false);\n  // };\n\n  //load storage data\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"language\") != null ) {\n  //     changeLang(localStorage.getItem(\"language\"));\n  //   } else {\n  //     changeLang(\"pl\");\n  //     localStorage.setItem(\"language\", \"pl\");\n  //   }\n  // });\n\n  useEffect(()=>{\n    getLocation();  \n  }, [location]);\n\n  const getLocation = ()=>{\n    if (routes.includes(location.pathname)){\n      setActive(routes.indexOf(location.pathname));\n    }\n  }\n\n  return (\n    <div>\n      <Navbar\n        style={{\n          boxShadow: \"0px 3px 4px rgba(0, 0, 0, 0.25)\",\n        }}\n        className=\"Navbar_main\"\n        variant=\"dark\"\n      >\n        <div className=\"nav-overlay\"></div>\n        <Container>\n          <Navbar.Brand href=\"/\" style={{zIndex:\"100\"}}>\n            Kacper\n          </Navbar.Brand>\n          <Nav>\n            <Nav className=\"me-auto d-none d-md-flex\">\n              <Nav.Link as={Link} to=\"/\" className={`mainLink ${active === 0 ? 'nav-active' : ''}`}>Home page</Nav.Link>\n              <div className=\"vr my-1 mx-4\" />\n              <Nav.Link as={Link} to=\"/about\" className={`mainLink ${active === 1 ? 'nav-active' : ''}`}>About me</Nav.Link>\n              <div className=\"vr my-1 mx-4\" />\n              <Nav.Link as={Link} to=\"/projects\" className={`mainLink ${active === 2 ? 'nav-active' : ''}`}>My projects</Nav.Link>\n            </Nav>\n            <Button\n              className=\"d-md-none upperbtn\"\n              style={{ width: \"auto\" }}\n              onClick={handleShow}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"32\"\n                height=\"32\"\n                fill=\"white\"\n                className=\"bi bi-list\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n                />\n              </svg>\n\n            </Button>\n          </Nav>\n        </Container>\n      </Navbar>\n        {/* MOBILE */}\n        <Offcanvas\n          show={show}\n          className=\"d-block d-md-none offBgc\"\n          onHide={handleClose}\n        >\n          <Offcanvas.Header closeButton>\n            <Offcanvas.Title>Kacper</Offcanvas.Title>\n          </Offcanvas.Header>\n          <Offcanvas.Body style={{ maxWidth: \"400px\" }}>\n            <hr className=\"my-2\" />\n            <Nav.Link\n              className={`Offcanv d-flex ${active === 0 ? 'off-active' : ''}`}\n              onClick={handleClose}\n              as={Link}\n              to=\"/\"\n            >\n              <p className=\"my-auto ms-3 fw-bold\" style={{ fontSize: \"20px\" }}>\n                Home\n              </p>\n            </Nav.Link>\n            <hr className=\"my-2\" />\n            <Nav.Link\n              className={`Offcanv d-flex ${active === 1 ? 'off-active' : ''}`}\n              onClick={handleClose}\n              as={Link}\n              to=\"/about\"\n            >\n              <p className=\"my-auto ms-3 fw-bold\" style={{ fontSize: \"20px\" }}>\n                About\n              </p>\n            </Nav.Link>\n            <hr className=\"my-2\" />\n            <Nav.Link\n              className={`Offcanv d-flex ${active === 2 ? 'off-active' : ''}`}\n              onClick={handleClose}\n              as={Link}\n              to=\"/projects\"\n            >\n              <p className=\"my-auto ms-3 fw-bold\" style={{ fontSize: \"20px\" }}>\n                My projects\n              </p>\n            </Nav.Link>\n            <hr className=\"my-2\" />\n            {/* <Container className=\"d-flex\">\n              <p\n                className=\"my-auto fw-semibold me-2\"\n                style={{ fontSize: \"16px\" }}\n              >\n                ustawienia\n              </p>\n              <NavDropdown\n                title={\n                  <span className=\"Marecki\">\n                    <p className=\"d-inline p-1 fw-bolder\">{Lang}</p>\n                  </span>\n                }\n                className=\"my-auto nav-dropdown\"\n                onSelect={langUpdate}\n              >\n                <NavDropdown.Item eventKey=\"PL\"><span className=\"nav-dropdown-text\">PL</span></NavDropdown.Item>\n                <NavDropdown.Item eventKey=\"EN\"><span className=\"nav-dropdown-text\">EN</span></NavDropdown.Item>\n                <NavDropdown.Item eventKey=\"DE\"><span className=\"nav-dropdown-text\">DE</span></NavDropdown.Item>\n              </NavDropdown>\n              <div className=\"vr m-1\" />\n            </Container> */}\n          </Offcanvas.Body>\n        </Offcanvas>\n      {/* routes */}\n\n      \n        <RouteWrapper/>\n        {/* <Route path=\"*\" element={<NotFound />} />\n          <Route path=\"/\" element={<Find />} />\n          <Route path=\"/visual\" element={<MadeOrder/>} />\n          <Route path=\"/routes\" element={<TripsWrapper/>} />\n          <Route path=\"/order/:order_id\" element={<OrderWrapper/>} />\n          <Route path=\"/order/complete/:order_id/:hash\" element={<ManualOrder/>} />\n          <Route path=\"/register\" element={<IsLogin><Register /></IsLogin>} />\n          <Route path=\"/password/reset\" element={<Reset />} />\n          <Route path=\"/email/verify/:token\" element={<Validation />} />\n          <Route path=\"/password/new/:token\" element={<Reset2 />} />\n          <Route path=\"/login\" element={<IsLogin><Login /></IsLogin>} />\n          <Route\n            path=\"/account/trips\"\n            element={<RequireLogin><PanelTrips /></RequireLogin>}\n          />\n          <Route\n            path=\"/account/settings\"\n            element={<RequireLogin><PanelSettings /></RequireLogin>}\n          /> */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/kacper/projekty/backup/portfolio-web/src/reportWebVitals.js",[],[],"/Users/kacper/projekty/backup/portfolio-web/src/assets/RouteWrapper.js",[],[],"/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/home.js",[],[],"/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/about.js",[],[],"/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects.js",[],[],"/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects/TicTac.js",["130","131","132","133","134","135","136","137","138","139","140","141"],[],"import React, { useState } from 'react';\nimport { Modal, Button, Row, Col } from 'react-bootstrap';\nimport { IconCircle,IconCircleNumber0, IconX } from '@tabler/icons-react';\nimport './styling/tic_theme.css'\n\nconst pole = ['', '', '', '', '', '', '', '', '']\n\n\nfunction TicTac() {\n\n    const [p1, pChange] = useState(true);\n    const [click, clicked] = useState(1);\n    const [winner, setWinner] = useState('Winner is: ')\n    const [whoWIn, setWin] = useState(0);\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const wincond = []\n\n    const pickBox = value => {\n        clicked(click + 1)\n        if (p1 === true) {\n            pole[value - 1] = 'O'\n        }\n        else {\n            pole[value - 1] = 'X'\n        }\n        wincond.push(\n            // row\n            pole[0] === pole[1] && pole[0] === pole[2] && pole[1] === pole[2] && pole[0] !== '' && pole[1] !== '' && pole[2] !== '',\n            pole[3] === pole[4] && pole[3] === pole[5] && pole[4] === pole[5] && pole[3] !== '' && pole[4] !== '' && pole[5] !== '',\n            pole[6] === pole[7] && pole[6] === pole[8] && pole[7] === pole[8] && pole[6] !== '' && pole[7] !== '' && pole[8] !== '',\n            //col\n            pole[0] === pole[3] && pole[0] === pole[6] && pole[3] === pole[6] && pole[0] !== '' && pole[3] !== '' && pole[6] !== '',\n            pole[1] === pole[4] && pole[1] === pole[7] && pole[4] === pole[7] && pole[1] !== '' && pole[4] !== '' && pole[7] !== '',\n            pole[2] === pole[5] && pole[2] === pole[8] && pole[5] === pole[8] && pole[2] !== '' && pole[5] !== '' && pole[8] !== '',\n            //diagonal\n            pole[0] === pole[4] && pole[0] === pole[8] && pole[4] === pole[8] && pole[0] !== '' && pole[4] !== '' && pole[8] !== '',\n            pole[2] === pole[4] && pole[2] === pole[6] && pole[4] === pole[6] && pole[2] !== '' && pole[4] !== '' && pole[6] !== '',\n        )\n        checkWin()\n    }\n\n    const checkWin = () => {\n        if (wincond.includes(true)) {\n            p1 ? setWinner('Winner is:') : setWinner('Winner is:')\n            p1 ? setWin(1) : setWin(2);\n            handleShow()\n            for (let i = 0; i < pole.length; i++)\n                if (pole[i] === '')\n                    pole[i] = ''\n        }\n        else if (click === 9) {\n            setWinner(\"It's a tie!\")\n            setWin(0);\n            handleShow()\n        }\n        else\n            pChange(!p1)\n    }\n\n    const Reset = () => {\n        clicked(1)\n        for (let i = 0; i < pole.length; i++)\n            pole[i] = ''\n        handleClose()\n    }\n\n    return (\n        <div class=\"container-fluid\">\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                className=\"text-center\"\n            >\n                <Modal.Header \n                 className='modalBody'\n                 closeButton>\n                    <Modal.Title>{winner} {whoWIn == 0 ? '' : ((whoWIn ==1) ? <IconCircle size={30}/>: <IconX size={30}/>)} </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=' modalBody p-2 py-3'>\n                    <Button className='mx-3 modalBTN' variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button className='mx-3 modalBTNres' variant=\"secondary\" onClick={Reset}>\n                        Reset\n                    </Button>\n                </Modal.Body>\n            </Modal>\n\n            <div className=\"row mt-4\">\n                <div className=\"col-sm-12 col-md-4 text-center\">\n                    <h2>Current Player</h2> \n                    <h3>{p1? <IconCircle stroke={4} size={30}/> : <IconX stroke={4} size={30}/>}</h3>\n                </div>\n                <div className=\"col-sm-12 col-md-5 gamewrap text-center\">\n                    <div className=\"game mx-auto\">\n                        <Row className='my-2'>\n                            <Col class=\"p-0\">\n                                {pole[0] ?\n                                    <button class=\"w-100 p-0 playBtnDis\" disabled>{ pole[0] == \"X\" ? <IconX stroke={3}/> : <IconCircle stroke={3}/>}</button>\n                                    :\n                                    <button class=\"w-100 p-0 playBtn\" onClick={() => { pickBox(\"1\") }}></button>}\n                            </Col>\n                            <Col class=\"p-0\">\n                                {pole[1] ?\n                                    <button class=\"w-100 p-0 playBtnDis\" disabled>{pole[1] == \"X\" ? <IconX stroke={3}/> : <IconCircle stroke={3}/>}</button>\n                                    :\n                                    <button class=\"w-100 p-0 playBtn\" onClick={() => { pickBox(\"2\") }}></button>}\n                            </Col>\n                            <Col class=\"p-0\">\n                                {pole[2] ?\n                                    <button class=\"w-100 p-0 playBtnDis\" disabled>{pole[2] == \"X\" ? <IconX stroke={3}/> : <IconCircle stroke={3}/>}</button>\n                                    :\n                                    <button class=\"w-100 p-0 playBtn\" onClick={() => { pickBox(\"3\") }}></button>}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col class=\"p-0\">\n                                {pole[3] ?\n                                    <button class=\"w-100 p-0 playBtnDis\" disabled>{pole[3] == \"X\" ? <IconX stroke={3}/> : <IconCircle stroke={3}/>}</button>\n                                    :\n                                    <button class=\"w-100 p-0 playBtn\" onClick={() => { pickBox(\"4\") }}></button>}\n                            </Col>\n                            <Col class=\"p-0\">\n                                {pole[4] ?\n                                    <button class=\"w-100 p-0 playBtnDis\" disabled>{pole[4] == \"X\" ? <IconX stroke={3}/> : <IconCircle stroke={3}/>}</button>\n                                    :\n                                    <button class=\"w-100 p-0 playBtn\" onClick={() => { pickBox(\"5\") }}></button>}\n                            </Col>\n                            <Col class=\"p-0\">\n                                {pole[5] ?\n                                    <button class=\"w-100 p-0 playBtnDis\" disabled>{pole[5] == \"X\" ? <IconX stroke={3}/> : <IconCircle stroke={3}/>}</button>\n                                    :\n                                    <button class=\"w-100 p-0 playBtn\" onClick={() => { pickBox(\"6\") }}></button>}\n                            </Col>\n                        </Row>\n                        <Row className='my-2'>\n                            <Col class=\"p-0\">\n                                {pole[6] ?\n                                    <button class=\"w-100 p-0 playBtnDis\" disabled>{pole[6] == \"X\" ? <IconX stroke={3}/> : <IconCircle stroke={3}/>}</button>\n                                    :\n                                    <button class=\"w-100 p-0 playBtn\" onClick={() => { pickBox(\"7\") }}></button>}\n                            </Col>\n                            <Col class=\"p-0\">\n                                {pole[7] ?\n                                    <button class=\"w-100 p-0 playBtnDis\" disabled>{pole[7] == \"X\" ? <IconX stroke={3}/> : <IconCircle stroke={3}/>}</button>\n                                    :\n                                    <button class=\"w-100 p-0 playBtn\" onClick={() => { pickBox(\"8\") }}></button>}\n                            </Col>\n                            <Col class=\"p-0\">\n                                {pole[8] ?\n                                    <button class=\"w-100 p-0 playBtnDis\" disabled>{pole[8] == \"X\" ? <IconX stroke={3}/> : <IconCircle stroke={3}/>}</button>\n                                    :\n                                    <button class=\"w-100 p-0 playBtn\" onClick={() => { pickBox(\"9\") }}></button>}\n                            </Col>\n                        </Row>\n                    </div>\n                    <button class='mx-auto my-5 fw-bold resetBtn' onClick={() => Reset()}>Reset</button>\n                </div>\n               \n            </div>\n        </div>\n    );\n}\n\nexport default TicTac;","/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects/calc.js",["142","143","144","145"],[],"import React, { useState } from 'react';\nimport './styling/calc_theme.css';\n\n\nfunction Calculator() {\n\n    const [Calc, setCalc] = useState('');\n    const [Result, SetResult] = useState('');\n    const ops = ['+', '-', '*', '/', '.']\n\n    const updateCalc = value =>{\n        if(\n            (ops.includes(value) && Calc === '') ||\n            (ops.includes(value) && ops.includes(Calc.slice(-1)))\n        )\n            return\n\n        setCalc(Calc + value)\n        if(!ops.includes(value))\n            SetResult(eval(Calc + value).toString())\n    }\n\n    const delet = () => {\n        if(Calc === ''){\n            return\n        }\n        const del = Calc.slice(0,-1)\n        \n        setCalc(del)\n        if(ops.includes(del.slice(-1)))\n            SetResult(eval(del.slice(0,-1)))\n        else if(del === '')\n            SetResult('')\n        else\n            SetResult(eval(del).toString())\n    }\n\n    const equal = () => {\n        setCalc(eval(Calc).toString())\n        SetResult('');\n    }\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"calculator mx-auto my-5 border rounded fw-bold\">\n                <div className=\"res text-end\">\n                    {Calc || \"0\"} <br/>\n                    {Result? <span>({Result})</span> : ''}\n                </div>\n                <div className=\"row ops mx-auto w-100\">\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('+')}>+</button>\n                    </div>\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('-')}>-</button>\n                    </div>\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('*')}>*</button>\n                    </div>\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('/')}>/</button>\n                    </div>\n                    <div className=\"col m-0 p-0\">\n                        <button type=\"button\" className=\"w-100\" onClick={() => delet()}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-backspace-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"M15.683 3a2 2 0 0 0-2-2h-7.08a2 2 0 0 0-1.519.698L.241 7.35a1 1 0 0 0 0 1.302l4.843 5.65A2 2 0 0 0 6.603 15h7.08a2 2 0 0 0 2-2V3zM5.829 5.854a.5.5 0 1 1 .707-.708l2.147 2.147 2.146-2.147a.5.5 0 1 1 .707.708L9.39 8l2.146 2.146a.5.5 0 0 1-.707.708L8.683 8.707l-2.147 2.147a.5.5 0 0 1-.707-.708L7.976 8 5.829 5.854z\" />\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"nums\">\n                    <div className=\"row mx-auto w-100\">\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\" onClick={()=> updateCalc('7')}>7</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('8')}>8</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('9')}>9</button>\n                        </div>\n                    </div>\n                    <div className=\"row mx-auto w-100\">\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('4')}>4</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('5')}>5</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('6')}>6</button>\n                        </div>\n                    </div>\n                    <div className=\"row mx-auto w-100\">\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('1')}>1</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('2')}>2</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('3')}>3</button>\n                        </div>\n                    </div>\n                    <div className=\"row mx-auto w-100\">\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('.')}>.</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\"onClick={()=> updateCalc('0')}>0</button>\n                        </div>\n                        <div className=\"col m-0 p-0\">\n                            <button type=\"button\" className=\"w-100\" onClick={()=>equal()}>=</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Calculator;","/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects/typer.js",[],[],"/Users/kacper/projekty/backup/portfolio-web/src/assets/services/api.js",[],[],"/Users/kacper/projekty/backup/portfolio-web/src/assets/pages/projects/components/typerGame.js",["146"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Container, Modal } from \"react-bootstrap\";\nimport { Timer } from \"timer-node\";\nimport \"../styling/typer_theme.css\"\n\nfunction TyperGame(props) {\n\n    const inputx = useRef();\n\n    const [source] = useState(props.quote);\n    const [accuracy, setPrec] = useState('');\n    const [wpm, setWpm] = useState(0);\n    const [result, setResult] = useState('<p class=\"sentence\">' +source+ \"</p>\");\n    let update;\n    const [goodWords, setWords] = useState(0);\n    const [done, setDone] = useState(false);\n    const timer = new Timer({ label: 'wynik' });\n    const [time, setTime] = useState({\n        m: 0,\n        s: 0,\n        ms: 0,\n    });\n    const [myTime, setMyTime] = useState({\n        m:0,\n        s:0,\n        ms:0,\n    })\n    useEffect(() => {\n        timer.start();\n        setInterval(updateTimer, 10);\n    }, [])\n\n    const updateTimer = () => {\n        if (!done) {\n            setTime({\n                m: timer.time().m,\n                s: timer.time().s,\n                ms: Math.ceil(timer.time().ms / 10)\n            });\n        }\n    }\n    const getWords = (str) => {\n        let arr = str.match(/\\w+/g);\n        return arr;\n    }\n\n    const updateAccuracy = (quote, userInput) => {\n        setResult('')\n\n        let ref = getWords(`${quote}`);\n        let users = getWords(`${userInput}`);\n        let final = ''\n\n        if (users) {\n            setWords(ref.filter(i=> users.includes(i)).length);\n            for (let i = 0; i < ref.length; i++) {\n                let rightVal = users[i] !== ref[i];\n                const good = `${final} <span class=\"great\">${ref[i]}</span>`\n                const bad = `${final} <span class=\"wrong\">${ref[i]}</span>`\n                if (i < users.length) {\n                    if (rightVal) {\n                        final = bad\n                    }\n                    else {\n                        final = good\n                    }\n                }\n                else (\n                    final = `${final} <span class=\"sentence\">${ref[i]} </span>`\n                )\n            }\n\n            setResult(`${final}`)\n        }\n        else {\n            setResult('<p class=\"sentence\">' +source+ \"</p>\")\n        }\n        if(equalArray(users, ref)){\n            setPrec('100%');\n            submitSentence();\n        }\n        else{\n            setPrec(`${(goodWords/ref.length*100).toFixed(2)}%`)\n        }\n    }\n\n    const equalArray = (a, b) =>{\n        return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, idx) => val === b[idx]);\n    }\n\n    const updateRes = (res) => {\n        return res\n    }\n    const submitSentence = () => {\n        timer.stop();\n        setMyTime(time)\n        setDone(true)\n\n        let timeDone =  time.m + time.s/60 + time.ms/60000\n        setWpm((goodWords / timeDone).toFixed(2))\n\n        clearInterval(update)\n        handleShow();\n    }\n\n\n    // modal\n        const [show, setShow] = useState(false)\n\n        const handleClose = ()=>{\n            setShow(false);\n            document.location.reload()\n        }\n        const handleShow = ()=>{\n            setShow(true);\n        }\n\n    return (\n        <Container className=\"game_board mt-5\">\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header>\n                    <Modal.Title>You finished!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=''>\n                    <p>Time:{myTime.m}:{myTime.s}:{myTime.ms}</p>\n                    <p>Accuracy:{accuracy}</p>\n                    <p>Words per minute(wpm):{wpm}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className='m-1' variant=\"secondary\" onClick={handleClose}>\n                        Play again\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <p className=\"timer\">{time.m > 0 && `${time.m}:`}{time.s}:{time.ms}</p>\n\n            <div className=\"my-5\"\n                dangerouslySetInnerHTML={{ __html: updateRes(result) }}\n            />\n            <input className=\"mb-3 inputEl\" autoFocus={true}  onDrop={(e)=>{e.preventDefault()}} onPaste={(e)=>{e.preventDefault()}}  ref={inputx} onInputCapture={(e) => updateAccuracy(source, e.target.value)} />\n            <button type=\"submit\" onClick={() => submitSentence()}>finish</button>\n        </Container>\n    )\n}\n\nexport default TyperGame;",{"ruleId":"147","severity":1,"message":"148","line":33,"column":3,"nodeType":"149","endLine":33,"endColumn":12,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":102,"column":21,"nodeType":"153","messageId":"154","endLine":102,"endColumn":104,"fix":"155"},{"ruleId":"151","severity":1,"message":"152","line":103,"column":21,"nodeType":"153","messageId":"154","endLine":103,"endColumn":135,"fix":"156"},{"ruleId":"151","severity":1,"message":"152","line":104,"column":21,"nodeType":"153","messageId":"154","endLine":104,"endColumn":109,"fix":"157"},{"ruleId":"158","severity":1,"message":"159","line":13,"column":33,"nodeType":"160","messageId":"161","endLine":13,"endColumn":35},{"ruleId":"158","severity":1,"message":"159","line":13,"column":48,"nodeType":"160","messageId":"161","endLine":13,"endColumn":50},{"ruleId":"158","severity":1,"message":"162","line":13,"column":48,"nodeType":"160","messageId":"161","endLine":13,"endColumn":50},{"ruleId":"158","severity":1,"message":"162","line":14,"column":33,"nodeType":"160","messageId":"161","endLine":14,"endColumn":35},{"ruleId":"163","severity":1,"message":"164","line":20,"column":23,"nodeType":"165","messageId":"166","endLine":20,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":31,"column":23,"nodeType":"165","messageId":"166","endLine":31,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":35,"column":23,"nodeType":"165","messageId":"166","endLine":35,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":39,"column":17,"nodeType":"165","messageId":"166","endLine":39,"endColumn":21},{"ruleId":"147","severity":1,"message":"167","line":44,"column":6,"nodeType":"168","endLine":44,"endColumn":16,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":3,"column":21,"nodeType":"149","messageId":"172","endLine":3,"endColumn":38},{"ruleId":"173","severity":1,"message":"174","line":82,"column":51,"nodeType":"175","messageId":"166","endLine":82,"endColumn":53},{"ruleId":"173","severity":1,"message":"174","line":82,"column":72,"nodeType":"175","messageId":"166","endLine":82,"endColumn":74},{"ruleId":"173","severity":1,"message":"174","line":104,"column":93,"nodeType":"175","messageId":"166","endLine":104,"endColumn":95},{"ruleId":"173","severity":1,"message":"174","line":110,"column":92,"nodeType":"175","messageId":"166","endLine":110,"endColumn":94},{"ruleId":"173","severity":1,"message":"174","line":116,"column":92,"nodeType":"175","messageId":"166","endLine":116,"endColumn":94},{"ruleId":"173","severity":1,"message":"174","line":124,"column":92,"nodeType":"175","messageId":"166","endLine":124,"endColumn":94},{"ruleId":"173","severity":1,"message":"174","line":130,"column":92,"nodeType":"175","messageId":"166","endLine":130,"endColumn":94},{"ruleId":"173","severity":1,"message":"174","line":136,"column":92,"nodeType":"175","messageId":"166","endLine":136,"endColumn":94},{"ruleId":"173","severity":1,"message":"174","line":144,"column":92,"nodeType":"175","messageId":"166","endLine":144,"endColumn":94},{"ruleId":"173","severity":1,"message":"174","line":150,"column":92,"nodeType":"175","messageId":"166","endLine":150,"endColumn":94},{"ruleId":"173","severity":1,"message":"174","line":156,"column":92,"nodeType":"175","messageId":"166","endLine":156,"endColumn":94},{"ruleId":"163","severity":1,"message":"164","line":20,"column":23,"nodeType":"165","messageId":"166","endLine":20,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":31,"column":23,"nodeType":"165","messageId":"166","endLine":31,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":35,"column":23,"nodeType":"165","messageId":"166","endLine":35,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":39,"column":17,"nodeType":"165","messageId":"166","endLine":39,"endColumn":21},{"ruleId":"147","severity":1,"message":"176","line":31,"column":8,"nodeType":"168","endLine":31,"endColumn":10,"suggestions":"177"},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'changeLang'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["178"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"179","text":"180"},{"range":"181","text":"180"},{"range":"182","text":"180"},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","no-eval","eval can be harmful.","CallExpression","unexpected","React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.","ArrayExpression",["183"],"no-unused-vars","'IconCircleNumber0' is defined but never used.","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has missing dependencies: 'timer' and 'updateTimer'. Either include them or remove the dependency array.",["184"],{"desc":"185","fix":"186"},[5963,5963]," rel=\"noreferrer\"",[6130,6130],[6273,6273],{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Add dependencies array: []",{"range":"191","text":"192"},"Update the dependencies array to be: [getLocation, location]",{"range":"193","text":"194"},"Update the dependencies array to be: [timer, updateTimer]",{"range":"195","text":"196"},[1389,1389],", []",[1282,1292],"[getLocation, location]",[890,892],"[timer, updateTimer]"]